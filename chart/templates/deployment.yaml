{{- $effectiveServices := include "microservice.effectiveServices" . | fromYaml -}}
{{- range $effectiveServices }}
{{- $service := . -}}
{{- $serviceConfig := include "microservice.getServiceConfig" (dict "service" $service "root" $) | fromYaml -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice.serviceName" (dict "service" $service "root" $) }}
  labels:
    {{- include "microservice.serviceLabels" (dict "service" $service "root" $) | nindent 4 }}
spec:
  {{- if not $serviceConfig.autoscaling.enabled }}
  replicas: {{ $serviceConfig.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "microservice.serviceSelectorLabels" (dict "service" $service "root" $) | nindent 6 }}
  template:
    metadata:
      {{- with $serviceConfig.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "microservice.serviceLabels" (dict "service" $service "root" $) | nindent 8 }}
        {{- with $serviceConfig.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with (coalesce $.Values.imagePullSecrets $serviceConfig.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "microservice.serviceAccountNameForService" (dict "service" $service "root" $) }}
      securityContext:
        {{- toYaml $serviceConfig.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $serviceConfig.securityContext | nindent 12 }}
          image: "{{ $serviceConfig.image.repository }}:{{ $serviceConfig.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $serviceConfig.image.pullPolicy }}
          args:
            - "-port={{ $serviceConfig.config.port }}"
            - "-service-name={{ $serviceConfig.config.serviceName }}"
            - "-timeout={{ $serviceConfig.config.timeout }}"
            - "-log-level={{ $serviceConfig.config.logLevel }}"
            - "-log-format={{ $serviceConfig.config.logFormat }}"
          ports:
            - name: http
              containerPort: {{ $serviceConfig.config.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml $serviceConfig.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $serviceConfig.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml $serviceConfig.resources | nindent 12 }}
      {{- with $serviceConfig.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $serviceConfig.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $serviceConfig.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}